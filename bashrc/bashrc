# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=10000
HISTFILESIZE=20000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

PS1='${debian_chroot:+($debian_chroot)}\[\033[01;34m\]\u@\h\[\033[00m\]:\[\033[01;32m\]\w\[\033[0;31m\]$(__git_ps1)\[\033[00m\]\n\$ '

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
# BEGIN ANSIBLE MANAGED BLOCK - git bash completion
if [ -f /etc/bash_completion.d/git-prompt ]; then
  . /etc/bash_completion.d/git-prompt
fi
# END ANSIBLE MANAGED BLOCK - git bash completion
export GIT_PS1_SHOWDIRTYSTATE=1
# BEGIN ANSIBLE MANAGED BLOCK - bash aliases
alias ..="cd .."
alias bc='bc -l'
alias pbcopy='xclip -sel clip'
alias DIR='echo "DIR=\"\$( cd \"\$( dirname \"\${BASH_SOURCE[0]}\" )\" && pwd )\""'
alias subl='subl -a'
alias atom='atom -n=false'
# END ANSIBLE MANAGED BLOCK - bash aliases
# BEGIN ANSIBLE MANAGED BLOCK - cdr function
# Walk backwards until you hit a "root" folder
function cdr() {
  # for git repos we can make 1 jump
  git_root=`git rev-parse --show-toplevel 2> /dev/null`
  if [ "$git_root" != "" ]
  then
    cd $git_root
    return 0
  fi
}
# END ANSIBLE MANAGED BLOCK - cdr function
# BEGIN ANSIBLE MANAGED BLOCK - golang env
export GOROOT=/home/dcouture/gobin/1.15/go
export GOPATH=/home/dcouture/gopath
export PATH="$PATH:$GOPATH/bin:$GOROOT/bin"
# END ANSIBLE MANAGED BLOCK - golang env

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/dcouture/google-cloud-sdk/path.bash.inc' ]; then source '/home/dcouture/google-cloud-sdk/path.bash.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/dcouture/google-cloud-sdk/completion.bash.inc' ]; then source '/home/dcouture/google-cloud-sdk/completion.bash.inc'; fi

# added by Anaconda3 installer
export PATH="/home/dcouture/anaconda3/bin:$PATH"
eval "$(register-python-argcomplete conda)"
# BEGIN ANSIBLE MANAGED BLOCK - terraform env
export PATH="$PATH:/home/dcouture/terraform/0.12.24"
# END ANSIBLE MANAGED BLOCK - terraform env
