# This file is managed by Chef any changes made will be overwritten

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# Set default editor
export EDITOR=/usr/bin/vi

# don't put duplicate lines in the history. See bash(1) for more options
# ... or force ignoredups and ignorespace
HISTCONTROL=ignoredups:ignorespace

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

GIT_PS1_SHOWDIRTYSTATE=true
PROMPT_COMMAND='CurDir=`pwd|sed -e "s!$HOME!~!"|sed -re "s!([^/]{1,3})[^/]+/!\1/!g"`'
PS1='${debian_chroot:+($debian_chroot)}\[\033[00;35m\]\D{%T} \u\[\033[00m\]@\[\033[35m\]\h\[\033[00m\] \[\033[32m\]$CurDir\[\033[31m\]$(__git_ps1)\[\033[00m\]\$ '

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -alF'
alias l='ls -CF'
alias psi='echo "CPU" && ps h -eo pcpu,args | sort -nr | head -n 4  && echo "MEM" && ps h -eo pmem,args | sort -nr | head -n 4'
alias clip='xclip -sel clip'
alias bc='bc -l'
alias outconns="netstat -ntu | tail -n +3 | awk '{print $4":"$5}' | cut -d':' -f 1,3 | sort | uniq -c | sort -nr"
alias ..="cd .."
alias grep="grep --exclude-dir=.svn"
alias wifi="sudo iwlist wlan0 scan |egrep -i SSID\|Address\|Channel\|Quality\|Auth"
alias R="R -q"

# Walk backwards until you hit a "root" folder
function cdr() {

  # for git repos we can make 1 jump
  git_root=`git rev-parse --show-toplevel 2> /dev/null`
  if [ "$git_root" != "" ]
  then
    cd $git_root
    return 0
  fi

  while [ 1 ]
  do
    # Stop at the true root
    if [ "$(pwd)" == "/" ]; then
      break
    fi

    # Stop at the home dir
    # You should have just used cd with no arg :)
    if [ "$(pwd)" == "/home/$USER" ]; then
      break
    fi

    # for subversion < 1.7 thanks to https://gist.github.com/egon1024
    # If this directory contains a .svn directory, but our parent does not,
    # we're at the top of a source tree and we'll call this a "root"
    if [ -d "./.svn" -a ! -d "$(dirname $(pwd))/.svn" ]; then
      return 0
    fi

    if [ $FOUND_ROOT -ne 1 ]
    then
      ROOT_TYPES=("^.svn$")
      for root_type in "${ROOT_TYPES[@]}"
      do
        IS_ROOT=$(ls -a | grep -cP '^.git$')
        if [ "$IS_ROOT" == "1" ]
        then
          return 0
        fi
      done
    fi

    cd ..
  done
}

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi


# python auto complete
if [ -f ~/.pythonenv ]
then
  source ~/.pythonenv
fi

# rstats environment
if [ -f ~/.renv ]
then
  source ~/.renv
fi

# For chef/vagrant
if [ -f ~/.chefenv ]
then
  source ~/.chefenv
fi

for f in $(ls ~/.bashrc.conf/*);
do
  source $f
done

# xrandr --output HDMI1 --auto
# xrandr --output HDMI1 --off

export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64
export LD_LIBRARY_PATH=$JAVA_HOME/lib/amd64:$JAVA_HOME/jre/lib/amd64/server

